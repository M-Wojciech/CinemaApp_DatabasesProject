// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GigaKino.Migrations
{
    [DbContext(typeof(KinoContext))]
    [Migration("20240622150155_2024_22_06_17_01")]
    partial class _2024_22_06_17_01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GigaKino.Models.Bilet", b =>
                {
                    b.Property<uint>("IdBilet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdBilet"));

                    b.Property<int>("Cena_Faktyczna")
                        .HasColumnType("int");

                    b.Property<uint>("IdMiejsce")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("IdSeans")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("IdTransakcja")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Ulga")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdBilet");

                    b.HasIndex("IdMiejsce");

                    b.HasIndex("IdSeans");

                    b.HasIndex("IdTransakcja");

                    b.ToTable("Bilet");
                });

            modelBuilder.Entity("GigaKino.Models.Film", b =>
                {
                    b.Property<uint>("IdFilm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("IdFilm");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdFilm"));

                    b.Property<string>("BannerPath")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("BannerPath");

                    b.Property<int>("Dlugosc")
                        .HasColumnType("int")
                        .HasColumnName("Dlugosc");

                    b.Property<string>("Gatunek")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Gatunek");

                    b.Property<int>("Ogr_wiekowe")
                        .HasColumnType("int")
                        .HasColumnName("Ogr_Wiekowe");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Opis");

                    b.Property<string>("PosterPath")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("PosterPath");

                    b.Property<string>("Rezyser")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Rezyser");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Trailer");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Tytul");

                    b.HasKey("IdFilm");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("GigaKino.Models.Kino", b =>
                {
                    b.Property<uint>("IdKino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdKino"));

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Numer_Budynku")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdKino");

                    b.ToTable("Kino");
                });

            modelBuilder.Entity("GigaKino.Models.Klient", b =>
                {
                    b.Property<uint>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdKlient"));

                    b.Property<uint?>("IdKonto")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Imie")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Nazwisko")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdKlient");

                    b.HasIndex("IdKonto");

                    b.ToTable("Klient");
                });

            modelBuilder.Entity("GigaKino.Models.Konto", b =>
                {
                    b.Property<uint>("IdKonto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdKonto"));

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Sol")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdKonto");

                    b.ToTable("Konto");
                });

            modelBuilder.Entity("GigaKino.Models.Miejsce", b =>
                {
                    b.Property<uint>("IdMiejsce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdMiejsce"));

                    b.Property<uint>("IdSala")
                        .HasColumnType("int unsigned");

                    b.Property<int>("Kolumna")
                        .HasColumnType("int");

                    b.Property<int>("Rzad")
                        .HasColumnType("int");

                    b.HasKey("IdMiejsce");

                    b.HasIndex("IdSala");

                    b.ToTable("Miejsce");
                });

            modelBuilder.Entity("GigaKino.Models.Pracownik", b =>
                {
                    b.Property<uint>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdPracownik"));

                    b.Property<DateTime>("Data_Urodzenia")
                        .HasColumnType("datetime(6)");

                    b.Property<uint?>("IdKonto")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Stanowisko")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdPracownik");

                    b.HasIndex("IdKonto");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("GigaKino.Models.Sala", b =>
                {
                    b.Property<uint>("IdSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdSala"));

                    b.Property<uint>("IdKino")
                        .HasColumnType("int unsigned");

                    b.Property<int>("Numer")
                        .HasColumnType("int");

                    b.HasKey("IdSala");

                    b.HasIndex("IdKino");

                    b.ToTable("Sala");
                });

            modelBuilder.Entity("GigaKino.Models.Seans", b =>
                {
                    b.Property<uint>("IdSeans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("idSeans");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdSeans"));

                    b.Property<int>("Cena_Domyslna")
                        .HasColumnType("int");

                    b.Property<uint>("IdFilm")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("IdSala")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Technologia")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("Termin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Wersja_Jezykowa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdSeans");

                    b.HasIndex("IdFilm");

                    b.HasIndex("IdSala");

                    b.ToTable("Seans");
                });

            modelBuilder.Entity("GigaKino.Models.Transakcja", b =>
                {
                    b.Property<uint>("IdTransakcja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("IdTransakcja"));

                    b.Property<int?>("Cena_Laczna")
                        .HasColumnType("int");

                    b.Property<DateTime>("Czas_Rozpoczecia")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("Czas_Zakupu")
                        .HasColumnType("datetime(6)");

                    b.Property<uint?>("IdKlient")
                        .HasColumnType("int unsigned");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdTransakcja");

                    b.HasIndex("IdKlient");

                    b.ToTable("Transakcja");
                });

            modelBuilder.Entity("GigaKino.Models.Bilet", b =>
                {
                    b.HasOne("GigaKino.Models.Miejsce", "Miejsce")
                        .WithMany()
                        .HasForeignKey("IdMiejsce")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GigaKino.Models.Seans", "Seans")
                        .WithMany()
                        .HasForeignKey("IdSeans")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GigaKino.Models.Transakcja", "Transakcja")
                        .WithMany()
                        .HasForeignKey("IdTransakcja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Miejsce");

                    b.Navigation("Seans");

                    b.Navigation("Transakcja");
                });

            modelBuilder.Entity("GigaKino.Models.Klient", b =>
                {
                    b.HasOne("GigaKino.Models.Konto", "Konto")
                        .WithMany()
                        .HasForeignKey("IdKonto");

                    b.Navigation("Konto");
                });

            modelBuilder.Entity("GigaKino.Models.Miejsce", b =>
                {
                    b.HasOne("GigaKino.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("IdSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("GigaKino.Models.Pracownik", b =>
                {
                    b.HasOne("GigaKino.Models.Konto", "Konto")
                        .WithMany()
                        .HasForeignKey("IdKonto");

                    b.Navigation("Konto");
                });

            modelBuilder.Entity("GigaKino.Models.Sala", b =>
                {
                    b.HasOne("GigaKino.Models.Kino", "Kino")
                        .WithMany()
                        .HasForeignKey("IdKino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kino");
                });

            modelBuilder.Entity("GigaKino.Models.Seans", b =>
                {
                    b.HasOne("GigaKino.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("IdFilm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GigaKino.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("IdSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("GigaKino.Models.Transakcja", b =>
                {
                    b.HasOne("GigaKino.Models.Klient", "Klient")
                        .WithMany()
                        .HasForeignKey("IdKlient");

                    b.Navigation("Klient");
                });
#pragma warning restore 612, 618
        }
    }
}
